<test-set xmlns="http://www.w3.org/2010/09/qt-fots-catalog" name="bin-decode-string">
  <description>Tests for the bin:decode-string function</description>
  
  <environment name="EXPath-binary">
    <namespace prefix="bin" uri="http://expath.org/ns/binary"/>
    <param name="empty.bin" select="xs:base64Binary('')"/>
    <!-- 'Man' in base64 - 3 octets, 4 characters -->
    <param name="man.base" select="xs:base64Binary('TWFu')"/>
    <param name="man.octets" select="77,97,110"/>
  </environment>
  
  
  <dependency type="feature" value="binary"/>
  
  
  <test-case name="EXPath-binary-decode-string-001">
    <description>decode-string on an empty sequence</description>
    <created by="John Lumley" on="2013-07-19"/>
    <modified by="John Lumley" on="2014-08-11" change="consistent EXPath naming"/>
    <environment ref="EXPath-binary"/>
    <test> bin:decode-string((),"utf-8") </test>
    <result>
      <assert-empty/>
    </result>
  </test-case>
  
  <test-case name="EXPath-binary-decode-string-002">
    <description>decode-string on empty binary data</description>
    <created by="John Lumley" on="2013-07-19"/>
    <modified by="John Lumley" on="2014-08-11" change="consistent EXPath naming"/>
    <environment ref="EXPath-binary"/>
    <test> bin:decode-string($empty.bin,"utf-8") </test>
    <result>
      <all-of>
        <assert-type>xs:string</assert-type>
        <assert-eq>""</assert-eq>
      </all-of>
    </result>
  </test-case>
  
  <test-case name="EXPath-binary-decode-string-003">
    <description>decode-string with unknown encoding</description>
    <created by="John Lumley" on="2013-07-19"/>
    <modified by="John Lumley" on="2014-08-11" change="consistent EXPath naming"/>
    <environment ref="EXPath-binary"/>
    <test> bin:decode-string($empty.bin,"NOTutf-8") </test>
    <result>
      <error code="Q{http://expath.org/ns/binary}unknown-encoding"/>
    </result>
  </test-case>
  
  <test-case name="EXPath-binary-decode-string-004">
    <description>decode-string on non-empty binary data</description>
    <created by="John Lumley" on="2013-07-19"/>
    <modified by="John Lumley" on="2014-08-12" change="Replace non-ASCII by encodings"/>
    <environment ref="EXPath-binary"/>
    <test> bin:decode-string(bin:encode-string("Simple &#xa3; text","utf-8"),"utf-8") </test>
    <result>
      <all-of>
        <assert-type>xs:string</assert-type>
        <assert-eq>"Simple &#xa3; text"</assert-eq>
      </all-of>
    </result>
  </test-case>
  
  <test-case name="EXPath-binary-decode-string-005">
    <description>decode-string on non-empty binary data</description>
    <created by="John Lumley" on="2013-07-19"/>
    <modified by="John Lumley" on="2014-08-12" change="Replace non-ASCII by encodings"/>
    <environment ref="EXPath-binary"/>
    <test> bin:decode-string(xs:base64Binary("QcOqw7HDvEM="),"utf-8") </test>
    <result>
      <all-of>
        <assert-type>xs:string</assert-type>
        <assert-eq>"A&#xea;&#xf1;&#xfc;C"</assert-eq>
      </all-of>
    </result>
  </test-case>
  
  <test-case name="EXPath-binary-decode-string-006">
    <description>decode-string on non-empty binary data, converted from octets</description>
    <created by="John Lumley" on="2013-07-19"/>
    <modified by="John Lumley" on="2014-08-12" change="Replace non-ASCII by encodings"/>
    <environment ref="EXPath-binary"/>
    <test> bin:decode-string(bin:from-octets((65,195,170,195,177,195,188,67)),"utf-8") </test>
    <result>
      <all-of>
        <assert-type>xs:string</assert-type>
        <assert-eq>"A&#xea;&#xf1;&#xfc;C"</assert-eq>
      </all-of>
    </result>
  </test-case>
  
  <test-case name="EXPath-binary-decode-string-007">
    <description>decode-string with offset</description>
    <created by="John Lumley" on="2013-07-19"/>
    <modified by="John Lumley" on="2014-08-12" change="Replace non-ASCII by encodings"/>
    <environment ref="EXPath-binary"/>
    <test> bin:decode-string(xs:base64Binary("QcOqw7HDvEM="),"utf-8",3) </test>
    <result>
      <all-of>
        <assert-type>xs:string</assert-type>
        <assert-eq>"&#xf1;&#xfc;C"</assert-eq>
      </all-of>
    </result>
  </test-case>
  
  <test-case name="EXPath-binary-decode-string-008">
    <description>decode-string with offset and size</description>
    <created by="John Lumley" on="2013-07-19"/>
    <modified by="John Lumley" on="2014-08-12" change="Replace non-ASCII by encodings"/>
    <environment ref="EXPath-binary"/>
    <test> bin:decode-string(xs:base64Binary("QcOqw7HDvEM="),"utf-8",3,4) </test>
    <result>
      <all-of>
        <assert-type>xs:string</assert-type>
        <assert-eq>"&#xf1;&#xfc;"</assert-eq>
      </all-of>
    </result>
  </test-case>
  
  <test-case name="EXPath-binary-decode-string-009">
    <description>decode-string with negative offset</description>
    <created by="John Lumley" on="2013-07-19"/>
    <modified by="John Lumley" on="2014-08-11" change="consistent EXPath naming"/>
    <environment ref="EXPath-binary"/>
    <test> bin:decode-string(xs:base64Binary("QcOqw7HDvEM="),"utf-8",-3,4) </test>
    <result>
      <error code="Q{http://expath.org/ns/binary}index-out-of-range"/>
    </result>
  </test-case>
  
  <test-case name="EXPath-binary-decode-string-010">
    <description>decode-string with negative size</description>
    <created by="John Lumley" on="2013-07-19"/>
    <modified by="John Lumley" on="2014-08-11" change="consistent EXPath naming"/>
    <environment ref="EXPath-binary"/>
    <test> bin:decode-string(xs:base64Binary("QcOqw7HDvEM="),"utf-8",3,-4) </test>
    <result>
      <error code="Q{http://expath.org/ns/binary}negative-size"/>
    </result>
  </test-case>
  
  <test-case name="EXPath-binary-decode-string-011">
    <description>decode-string with offset+size beyond data</description>
    <created by="John Lumley" on="2013-07-19"/>
    <modified by="John Lumley" on="2014-08-11" change="consistent EXPath naming"/>
    <environment ref="EXPath-binary"/>
    <test> bin:decode-string(xs:base64Binary("QcOqw7HDvEM="),"utf-8",3,6) </test>
    <result>
      <error code="Q{http://expath.org/ns/binary}index-out-of-range"/>
    </result>
  </test-case>
  
  <test-case name="EXPath-binary-decode-string-012">
    <description>decode-string with code phasing mismatch in UTF-8</description>
    <created by="John Lumley" on="2013-07-19"/>
    <modified by="John Lumley" on="2014-08-11" change="consistent EXPath naming"/>
    <environment ref="EXPath-binary"/>
    <test> bin:decode-string(xs:base64Binary("QcOqw7HDvEM="),"utf-8",2) </test>
    <result>
      <error code="Q{http://expath.org/ns/binary}conversion-error"/>
    </result>
  </test-case>
  
  <test-case name="EXPath-binary-decode-string-013">
    <description>decode-string on non-empty binary data in UTF-16</description>
    <created by="John Lumley" on="2013-07-19"/>
    <modified by="John Lumley" on="2014-08-11" change="consistent EXPath naming"/>
    <environment ref="EXPath-binary"/>
    <test> bin:decode-string(xs:base64Binary(
                xs:hexBinary("feff00540068006900730020006900730020005500540046002d00310036")),
                "utf-16") </test>
    <result>
      <all-of>
        <assert-type>xs:string</assert-type>
        <assert-eq>"This is UTF-16"</assert-eq>
      </all-of>
    </result>
  </test-case>
  
  <test-case name="EXPath-binary-decode-string-014">
    <description>decode-string on non-empty binary data in UTF-16 with big-endian
                BOM</description>
    <created by="John Lumley" on="2013-07-19"/>
    <modified by="John Lumley" on="2014-08-12" change="Replace non-ASCII by encodings"/>
    <environment ref="EXPath-binary"/>
    <test> bin:decode-string(xs:base64Binary(xs:hexBinary("feff011e")),"utf-16") </test>
    <result>
      <all-of>
        <assert-type>xs:string</assert-type>
        <assert-eq>"&#x11e;"</assert-eq>
      </all-of>
    </result>
  </test-case>
  
  <test-case name="EXPath-binary-decode-string-015">
    <description>decode-string on non-empty binary data in UTF-16 with little endian
                BOM</description>
    <created by="John Lumley" on="2013-07-19"/>
    <modified by="John Lumley" on="2014-08-12" change="Replace non-ASCII by encodings"/>
    <environment ref="EXPath-binary"/>
    <test> bin:decode-string(xs:base64Binary(xs:hexBinary("fffe1e01")),"utf-16") </test>
    <result>
      <all-of>
        <assert-type>xs:string</assert-type>

        <assert-eq>"&#x11e;"</assert-eq>
      </all-of>
    </result>
  </test-case>
  
  <test-case name="EXPath-binary-decode-string-016">
    <description>decode-string on non-empty binary data with default encoding</description>
    <created by="John Lumley" on="2013-11-19"/>
    <modified by="John Lumley" on="2014-08-11" change="consistent EXPath naming"/>
    <environment ref="EXPath-binary"/>
    <test> bin:decode-string(xs:base64Binary("QcOqw7HDvEM=")) =
                bin:decode-string(xs:base64Binary("QcOqw7HDvEM="),"utf-8") </test>
    <result>
      <all-of>
        <assert-true/>
      </all-of>
    </result>
  </test-case>
  
  <test-case name="EXPath-binary-decode-string-017" covers-40="PR1765">
    <description>decode-string on non-empty binary data in UTF-16, BE, no BOM</description>
    <created by="Michael Kay" on="2025-02-18"/>
    <environment ref="EXPath-binary"/>
    <test> bin:decode-string(xs:base64Binary(
                xs:hexBinary("00540068006900730020006900730020005500540046002d00310036")),
                "utf-16") </test>
    <result>
      <all-of>
        <assert-type>xs:string</assert-type>
        <assert-eq>"This is UTF-16"</assert-eq>
      </all-of>
    </result>
  </test-case>
  
  <test-case name="EXPath-binary-decode-string-018" covers-40="PR1765">
    <description>decode-string on non-empty binary data in UTF-16BE, no BOM</description>
    <created by="Michael Kay" on="2025-02-18"/>
    <environment ref="EXPath-binary"/>
    <test> bin:decode-string(xs:base64Binary(
                xs:hexBinary("00540068006900730020006900730020005500540046002d00310036")),
                "utf-16be") </test>
    <result>
      <all-of>
        <assert-type>xs:string</assert-type>
        <assert-eq>"This is UTF-16"</assert-eq>
      </all-of>
    </result>
  </test-case>
  
  <test-case name="EXPath-binary-decode-string-019" covers-40="PR1765">
    <description>decode-string on non-empty binary data in UTF-16 with little endian
                encoding, no BOM</description>
    <created by="Michael Kay" on="2025-02-18"/>
    <environment ref="EXPath-binary"/>
    <test> bin:decode-string(xs:base64Binary(xs:hexBinary("1e01")),"utf-16le") </test>
    <result>
      <all-of>
        <assert-type>xs:string</assert-type>

        <assert-eq>"&#x11e;"</assert-eq>
      </all-of>
    </result>
  </test-case>
  
  <test-case name="EXPath-binary-decode-string-020" covers-40="PR2222">
    <description>BOM at offset 0 used when reading from later offset</description>
    <created by="Michael Kay" on="2025-02-18"/>
    <modified by="Christian Gruen" on="2025-10-28" change="BOM is ignored (utf-16be)"/>
    <environment ref="EXPath-binary"/>
    <test> bin:decode-string(xs:base64Binary(xs:hexBinary("fffe690069006900")),"utf-16", 6) </test>
    <result>
      <all-of>
        <assert-type>xs:string</assert-type>
        <assert-string-value>&#x6900;</assert-string-value>
      </all-of>
    </result>
  </test-case>
  
  <test-case name="EXPath-binary-decode-string-021" covers-40="PR1765">
    <description>BOM at non-zero offset treated as regular character</description>
    <created by="Michael Kay" on="2025-02-18"/>
    <environment ref="EXPath-binary"/>
    <test> bin:decode-string(xs:base64Binary(xs:hexBinary("69006900fffe")),"utf-16le", 2) </test>
    <result>
      <all-of>
        <assert-type>xs:string</assert-type>
        <assert-eq>"i" || char(0xfeff)</assert-eq>
      </all-of>
    </result>
  </test-case>
  
  <test-case name="bin-decode-string1">
    <description>Test for the decode-string function.</description>
    <created by="Christian Grün" on="2013-11-19+01:00"/>
    <modified by="John Lumley" on="2014-08-13" change="changed assertion type to string from integer"/>
    <environment ref="EXPath-binary"/>
    <test>bin:decode-string(xs:base64Binary(xs:hexBinary("3132")), "US-ASCII")</test>
    <result>
      <assert-eq>'12'</assert-eq>
    </result>
  </test-case>
  
  <test-case name="bin-decode-string2">
    <description>Test for the decode-string function.</description>
    <created by="Christian Grün" on="2013-11-19+01:00"/>
    <environment ref="EXPath-binary"/>
    <test>bin:decode-string(xs:base64Binary(xs:hexBinary("3132")), "UTF-8")</test>
    <result>
      <assert-eq>'12'</assert-eq>
    </result>
  </test-case>
  
  <test-case name="bin-decode-string3">
    <description>Test for the decode-string function.</description>
    <created by="Christian Grün" on="2013-11-19+01:00"/>
    <environment ref="EXPath-binary"/>
    <test>bin:decode-string(xs:base64Binary(xs:hexBinary("313233")), "UTF-8", 1, 1)</test>
    <result>
      <assert-eq>'2'</assert-eq>
    </result>
  </test-case>
  
  <test-case name="bin-decode-string4">
    <description>Test for the decode-string function.</description>
    <created by="Christian Grün" on="2013-11-19+01:00"/>
    <environment ref="EXPath-binary"/>
    <test>bin:decode-string(xs:base64Binary(xs:hexBinary("")), "UTF-8", -1)</test>
    <result>
      <error code="Q{http://expath.org/ns/binary}index-out-of-range"/>
    </result>
  </test-case>
  
  <test-case name="bin-decode-string5">
    <description>Test for the decode-string function.</description>
    <created by="Christian Grün" on="2013-11-19+01:00"/>
    <environment ref="EXPath-binary"/>
    <test>bin:decode-string(xs:base64Binary(xs:hexBinary("")), "UTF-8", 0, -1)</test>
    <result>
      <error code="Q{http://expath.org/ns/binary}negative-size"/>
    </result>
  </test-case>
  
  <test-case name="bin-decode-string6">
    <description>Test for the decode-string function.</description>
    <created by="Christian Grün" on="2013-11-19+01:00"/>
    <environment ref="EXPath-binary"/>
    <test>bin:decode-string(xs:base64Binary(xs:hexBinary("")), "UTF-8", 1, 0)</test>
    <result>
      <error code="Q{http://expath.org/ns/binary}index-out-of-range"/>
    </result>
  </test-case>
  
  <test-case name="bin-decode-string7">
    <description>Test for the decode-string function.</description>
    <created by="Christian Grün" on="2013-11-19+01:00"/>
    <environment ref="EXPath-binary"/>
    <test>bin:decode-string(xs:base64Binary(xs:hexBinary("")), "UTF-8", 0, 1)</test>
    <result>
      <error code="Q{http://expath.org/ns/binary}index-out-of-range"/>
    </result>
  </test-case>
  
  <test-case name="bin-decode-string8">
    <description>Test for the decode-string function.</description>
    <created by="Christian Grün" on="2013-11-19+01:00"/>
    <environment ref="EXPath-binary"/>
    <test>bin:decode-string(xs:base64Binary(xs:hexBinary("")), "X")</test>
    <result>
      <error code="Q{http://expath.org/ns/binary}unknown-encoding"/>
    </result>
  </test-case>
  
  <test-case name="bin-decode-string9">
    <description>Test for the decode-string function.</description>
    <created by="Christian Grün" on="2013-11-19+01:00"/>
    <environment ref="EXPath-binary"/>
    <test>bin:decode-string(xs:base64Binary(xs:hexBinary("FF")), "UTF-8")</test>
    <result>
      <error code="Q{http://expath.org/ns/binary}conversion-error"/>
    </result>
  </test-case>
  
  <test-case name="bin-decode-string-010" covers-40="PR2222">
    <description>Test for the decode-string function.</description>
    <created by="Christian Gruen" on="2025-10-28"/>
    <test>bin:decode-string(xs:hexBinary('40EFBBBF4142'))</test>
    <result>
      <assert-string-value>@﻿AB</assert-string-value>
    </result>
  </test-case>

  <test-case name="bin-decode-string-011" covers-40="PR2222">
    <description>Test for the decode-string function.</description>
    <created by="Christian Gruen" on="2025-10-28"/>
    <test>bin:decode-string(xs:hexBinary('EFBBBF4142'))</test>
    <result>
      <assert-string-value>AB</assert-string-value>
    </result>
  </test-case>

  <test-case name="bin-decode-string-012" covers-40="PR2222">
    <description>Test for the decode-string function.</description>
    <created by="Christian Gruen" on="2025-10-28"/>
    <test>bin:decode-string(xs:hexBinary('BBBF4142'))</test>
    <result>
      <error code="Q{http://expath.org/ns/binary}conversion-error"/>
    </result>
  </test-case>

  <test-case name="bin-decode-string-013" covers-40="PR2222">
    <description>Test for the decode-string function.</description>
    <created by="Christian Gruen" on="2025-10-28"/>
    <test>bin:decode-string(xs:hexBinary('BF4142'))</test>
    <result>
      <error code="Q{http://expath.org/ns/binary}conversion-error"/>
    </result>
  </test-case>

  <test-case name="bin-decode-string-014" covers-40="PR2222">
    <description>Test for the decode-string function.</description>
    <created by="Christian Gruen" on="2025-10-28"/>
    <test>bin:decode-string(xs:hexBinary('4142'))</test>
    <result>
      <assert-string-value>AB</assert-string-value>
    </result>
  </test-case>

  <test-case name="bin-decode-string-015" covers-40="PR2222">
    <description>Test for the decode-string function.</description>
    <created by="Christian Gruen" on="2025-10-28"/>
    <test>bin:decode-string(xs:hexBinary('42'))</test>
    <result>
      <assert-string-value>B</assert-string-value>
    </result>
  </test-case>

  <test-case name="bin-decode-string-016" covers-40="PR2222">
    <description>Test for the decode-string function.</description>
    <created by="Christian Gruen" on="2025-10-28"/>
    <test>bin:decode-string(xs:hexBinary(''))</test>
    <result>
      <assert-string-value/>
    </result>
  </test-case>

  <test-case name="bin-decode-string-017" covers-40="PR2222">
    <description>Test for the decode-string function.</description>
    <created by="Christian Gruen" on="2025-10-28"/>
    <test>bin:decode-string(xs:hexBinary('40EFBBBF4142'), (), 0)</test>
    <result>
      <assert-string-value>@﻿AB</assert-string-value>
    </result>
  </test-case>

  <test-case name="bin-decode-string-018" covers-40="PR2222">
    <description>Test for the decode-string function.</description>
    <created by="Christian Gruen" on="2025-10-28"/>
    <test>bin:decode-string(xs:hexBinary('40EFBBBF4142'), (), 1)</test>
    <result>
      <assert-string-value>﻿AB</assert-string-value>
    </result>
  </test-case>

  <test-case name="bin-decode-string-019" covers-40="PR2222">
    <description>Test for the decode-string function.</description>
    <created by="Christian Gruen" on="2025-10-28"/>
    <test>bin:decode-string(xs:hexBinary('40EFBBBF4142'), (), 2)</test>
    <result>
      <error code="Q{http://expath.org/ns/binary}conversion-error"/>
    </result>
  </test-case>

  <test-case name="bin-decode-string-020" covers-40="PR2222">
    <description>Test for the decode-string function.</description>
    <created by="Christian Gruen" on="2025-10-28"/>
    <test>bin:decode-string(xs:hexBinary('40EFBBBF4142'), (), 3)</test>
    <result>
      <error code="Q{http://expath.org/ns/binary}conversion-error"/>
    </result>
  </test-case>

  <test-case name="bin-decode-string-021" covers-40="PR2222">
    <description>Test for the decode-string function.</description>
    <created by="Christian Gruen" on="2025-10-28"/>
    <test>bin:decode-string(xs:hexBinary('40EFBBBF4142'), (), 4)</test>
    <result>
      <assert-string-value>AB</assert-string-value>
    </result>
  </test-case>

  <test-case name="bin-decode-string-022" covers-40="PR2222">
    <description>Test for the decode-string function.</description>
    <created by="Christian Gruen" on="2025-10-28"/>
    <test>bin:decode-string(xs:hexBinary('40EFBBBF4142'), (), 5)</test>
    <result>
      <assert-string-value>B</assert-string-value>
    </result>
  </test-case>

  <test-case name="bin-decode-string-023" covers-40="PR2222">
    <description>Test for the decode-string function.</description>
    <created by="Christian Gruen" on="2025-10-28"/>
    <test>bin:decode-string(xs:hexBinary('40EFBBBF4142'), (), 6)</test>
    <result>
      <assert-string-value/>
    </result>
  </test-case>

  <test-case name="bin-decode-string-024" covers-40="PR2222">
    <description>Test for the decode-string function.</description>
    <created by="Christian Gruen" on="2025-10-28"/>
    <test>bin:decode-string(xs:hexBinary('40EFBBBF4142'), "utf-8", 0)</test>
    <result>
      <assert-string-value>@﻿AB</assert-string-value>
    </result>
  </test-case>

  <test-case name="bin-decode-string-025" covers-40="PR2222">
    <description>Test for the decode-string function.</description>
    <created by="Christian Gruen" on="2025-10-28"/>
    <test>bin:decode-string(xs:hexBinary('40EFBBBF4142'), "utf-8", 1)</test>
    <result>
      <assert-string-value>﻿AB</assert-string-value>
    </result>
  </test-case>

  <test-case name="bin-decode-string-026" covers-40="PR2222">
    <description>Test for the decode-string function.</description>
    <created by="Christian Gruen" on="2025-10-28"/>
    <test>bin:decode-string(xs:hexBinary('40EFBBBF4142'), "utf-8", 2)</test>
    <result>
      <error code="Q{http://expath.org/ns/binary}conversion-error"/>
    </result>
  </test-case>

  <test-case name="bin-decode-string-027" covers-40="PR2222">
    <description>Test for the decode-string function.</description>
    <created by="Christian Gruen" on="2025-10-28"/>
    <test>bin:decode-string(xs:hexBinary('40EFBBBF4142'), "utf-8", 3)</test>
    <result>
      <error code="Q{http://expath.org/ns/binary}conversion-error"/>
    </result>
  </test-case>

  <test-case name="bin-decode-string-028" covers-40="PR2222">
    <description>Test for the decode-string function.</description>
    <created by="Christian Gruen" on="2025-10-28"/>
    <test>bin:decode-string(xs:hexBinary('40EFBBBF4142'), "utf-8", 4)</test>
    <result>
      <assert-string-value>AB</assert-string-value>
    </result>
  </test-case>

  <test-case name="bin-decode-string-029" covers-40="PR2222">
    <description>Test for the decode-string function.</description>
    <created by="Christian Gruen" on="2025-10-28"/>
    <test>bin:decode-string(xs:hexBinary('40EFBBBF4142'), "utf-8", 5)</test>
    <result>
      <assert-string-value>B</assert-string-value>
    </result>
  </test-case>

  <test-case name="bin-decode-string-030" covers-40="PR2222">
    <description>Test for the decode-string function.</description>
    <created by="Christian Gruen" on="2025-10-28"/>
    <test>bin:decode-string(xs:hexBinary('40EFBBBF4142'), "utf-8", 6)</test>
    <result>
      <assert-string-value/>
    </result>
  </test-case>

  <test-case name="bin-decode-string-031" covers-40="PR2222">
    <description>Test for the decode-string function.</description>
    <created by="Christian Gruen" on="2025-10-28"/>
    <test>bin:decode-string(xs:hexBinary('40EFBBBF4142'), "utf-16", 0)</test>
    <result>
      <assert-string-value>&#x40EF;&#xBBBF;&#x4142;</assert-string-value>
    </result>
  </test-case>

  <test-case name="bin-decode-string-032" covers-40="PR2222">
    <description>Test for the decode-string function.</description>
    <created by="Christian Gruen" on="2025-10-28"/>
    <test>bin:decode-string(xs:hexBinary('40EFBBBF4142'), "utf-16", 1)</test>
    <result>
      <error code="Q{http://expath.org/ns/binary}conversion-error"/>
    </result>
  </test-case>

  <test-case name="bin-decode-string-033" covers-40="PR2222">
    <description>Test for the decode-string function.</description>
    <created by="Christian Gruen" on="2025-10-28"/>
    <test>bin:decode-string(xs:hexBinary('40EFBBBF4142'), "utf-16", 2)</test>
    <result>
      <assert-string-value>&#xBBBF;&#x4142;</assert-string-value>
    </result>
  </test-case>

  <test-case name="bin-decode-string-034" covers-40="PR2222">
    <description>Test for the decode-string function.</description>
    <created by="Christian Gruen" on="2025-10-28"/>
    <test>bin:decode-string(xs:hexBinary('40EFBBBF4142'), "utf-16", 3)</test>
    <result>
      <error code="Q{http://expath.org/ns/binary}conversion-error"/>
    </result>
  </test-case>

  <test-case name="bin-decode-string-035" covers-40="PR2222">
    <description>Test for the decode-string function.</description>
    <created by="Christian Gruen" on="2025-10-28"/>
    <test>bin:decode-string(xs:hexBinary('40EFBBBF4142'), "utf-16", 4)</test>
    <result>
      <assert-string-value>&#x4142;</assert-string-value>
    </result>
  </test-case>

  <test-case name="bin-decode-string-036" covers-40="PR2222">
    <description>Test for the decode-string function.</description>
    <created by="Christian Gruen" on="2025-10-28"/>
    <test>bin:decode-string(xs:hexBinary('40EFBBBF4142'), "utf-16", 5)</test>
    <result>
      <error code="Q{http://expath.org/ns/binary}conversion-error"/>
    </result>
  </test-case>

  <test-case name="bin-decode-string-037" covers-40="PR2222">
    <description>Test for the decode-string function.</description>
    <created by="Christian Gruen" on="2025-10-28"/>
    <test>bin:decode-string(xs:hexBinary('40EFBBBF4142'), "utf-16", 6)</test>
    <result>
      <assert-string-value/>
    </result>
  </test-case>

  <test-case name="bin-decode-string-038" covers-40="PR2222">
    <description>Test for the decode-string function.</description>
    <created by="Christian Gruen" on="2025-10-28"/>
    <test>bin:decode-string(xs:hexBinary('40EFBBBF4142'), "utf-16be", 0)</test>
    <result>
      <assert-string-value>&#x40EF;&#xBBBF;&#x4142;</assert-string-value>
    </result>
  </test-case>

  <test-case name="bin-decode-string-039" covers-40="PR2222">
    <description>Test for the decode-string function.</description>
    <created by="Christian Gruen" on="2025-10-28"/>
    <test>bin:decode-string(xs:hexBinary('40EFBBBF4142'), "utf-16be", 1)</test>
    <result>
      <error code="Q{http://expath.org/ns/binary}conversion-error"/>
    </result>
  </test-case>

  <test-case name="bin-decode-string-040" covers-40="PR2222">
    <description>Test for the decode-string function.</description>
    <created by="Christian Gruen" on="2025-10-28"/>
    <test>bin:decode-string(xs:hexBinary('40EFBBBF4142'), "utf-16be", 2)</test>
    <result>
      <assert-string-value>&#xBBBF;&#x4142;</assert-string-value>
    </result>
  </test-case>

  <test-case name="bin-decode-string-041" covers-40="PR2222">
    <description>Test for the decode-string function.</description>
    <created by="Christian Gruen" on="2025-10-28"/>
    <test>bin:decode-string(xs:hexBinary('40EFBBBF4142'), "utf-16be", 3)</test>
    <result>
      <error code="Q{http://expath.org/ns/binary}conversion-error"/>
    </result>
  </test-case>

  <test-case name="bin-decode-string-042" covers-40="PR2222">
    <description>Test for the decode-string function.</description>
    <created by="Christian Gruen" on="2025-10-28"/>
    <test>bin:decode-string(xs:hexBinary('40EFBBBF4142'), "utf-16be", 4)</test>
    <result>
      <assert-string-value>&#x4142;</assert-string-value>
    </result>
  </test-case>

  <test-case name="bin-decode-string-043" covers-40="PR2222">
    <description>Test for the decode-string function.</description>
    <created by="Christian Gruen" on="2025-10-28"/>
    <test>bin:decode-string(xs:hexBinary('40EFBBBF4142'), "utf-16be", 5)</test>
    <result>
      <error code="Q{http://expath.org/ns/binary}conversion-error"/>
    </result>
  </test-case>

  <test-case name="bin-decode-string-044" covers-40="PR2222">
    <description>Test for the decode-string function.</description>
    <created by="Christian Gruen" on="2025-10-28"/>
    <test>bin:decode-string(xs:hexBinary('40EFBBBF4142'), "utf-16be", 6)</test>
    <result>
      <assert-string-value/>
    </result>
  </test-case>

  <test-case name="bin-decode-string-045" covers-40="PR2222">
    <description>Test for the decode-string function.</description>
    <created by="Christian Gruen" on="2025-10-28"/>
    <test>bin:decode-string(xs:hexBinary('40EFBBBF4142'), "utf-16le", 0)</test>
    <result>
      <assert-string-value>&#xEF40;&#xBFBB;&#x4241;</assert-string-value>
    </result>
  </test-case>

  <test-case name="bin-decode-string-046" covers-40="PR2222">
    <description>Test for the decode-string function.</description>
    <created by="Christian Gruen" on="2025-10-28"/>
    <test>bin:decode-string(xs:hexBinary('40EFBBBF4142'), "utf-16le", 1)</test>
    <result>
      <error code="Q{http://expath.org/ns/binary}conversion-error"/>
    </result>
  </test-case>

  <test-case name="bin-decode-string-047" covers-40="PR2222">
    <description>Test for the decode-string function.</description>
    <created by="Christian Gruen" on="2025-10-28"/>
    <test>bin:decode-string(xs:hexBinary('40EFBBBF4142'), "utf-16le", 2)</test>
    <result>
      <assert-string-value>&#xBFBB;&#x4241;</assert-string-value>
    </result>
  </test-case>

  <test-case name="bin-decode-string-048" covers-40="PR2222">
    <description>Test for the decode-string function.</description>
    <created by="Christian Gruen" on="2025-10-28"/>
    <test>bin:decode-string(xs:hexBinary('40EFBBBF4142'), "utf-16le", 3)</test>
    <result>
      <error code="Q{http://expath.org/ns/binary}conversion-error"/>
    </result>
  </test-case>

  <test-case name="bin-decode-string-049" covers-40="PR2222">
    <description>Test for the decode-string function.</description>
    <created by="Christian Gruen" on="2025-10-28"/>
    <test>bin:decode-string(xs:hexBinary('40EFBBBF4142'), "utf-16le", 4)</test>
    <result>
      <assert-string-value>&#x4241;</assert-string-value>
    </result>
  </test-case>

  <test-case name="bin-decode-string-050" covers-40="PR2222">
    <description>Test for the decode-string function.</description>
    <created by="Christian Gruen" on="2025-10-28"/>
    <test>bin:decode-string(xs:hexBinary('40EFBBBF4142'), "utf-16le", 5)</test>
    <result>
      <error code="Q{http://expath.org/ns/binary}conversion-error"/>
    </result>
  </test-case>

  <test-case name="bin-decode-string-051" covers-40="PR2222">
    <description>Test for the decode-string function.</description>
    <created by="Christian Gruen" on="2025-10-28"/>
    <test>bin:decode-string(xs:hexBinary('40EFBBBF4142'), "utf-16le", 6)</test>
    <result>
      <assert-string-value/>
    </result>
  </test-case>

  <test-case name="bin-decode-string-052" covers-40="PR2222">
    <description>Test for the decode-string function.</description>
    <created by="Christian Gruen" on="2025-10-28"/>
    <test>bin:decode-string(xs:hexBinary('40EFBBBF4142'), "iso-8859-1", 0)</test>
    <result>
      <any-of>
        <error code="Q{http://expath.org/ns/binary}unknown-encoding"/>
        <assert-string-value>@&#xEF;&#xBB;&#xBF;AB</assert-string-value>
      </any-of>
    </result>
  </test-case>

  <test-case name="bin-decode-string-053" covers-40="PR2222">
    <description>Test for the decode-string function.</description>
    <created by="Christian Gruen" on="2025-10-28"/>
    <test>bin:decode-string(xs:hexBinary('40EFBBBF4142'), "iso-8859-1", 1)</test>
    <result>
      <any-of>
        <error code="Q{http://expath.org/ns/binary}unknown-encoding"/>
        <assert-string-value>&#xEF;&#xBB;&#xBF;AB</assert-string-value>
      </any-of>
    </result>
  </test-case>

  <test-case name="bin-decode-string-054" covers-40="PR2222">
    <description>Test for the decode-string function.</description>
    <created by="Christian Gruen" on="2025-10-28"/>
    <test>bin:decode-string(xs:hexBinary('40EFBBBF4142'), "iso-8859-1", 2)</test>
    <result>
      <any-of>
        <error code="Q{http://expath.org/ns/binary}unknown-encoding"/>
        <assert-string-value>&#xBB;&#xBF;AB</assert-string-value>
      </any-of>
    </result>
  </test-case>

  <test-case name="bin-decode-string-055" covers-40="PR2222">
    <description>Test for the decode-string function.</description>
    <created by="Christian Gruen" on="2025-10-28"/>
    <test>bin:decode-string(xs:hexBinary('40EFBBBF4142'), "iso-8859-1", 3)</test>
    <result>
      <any-of>
        <error code="Q{http://expath.org/ns/binary}unknown-encoding"/>
        <assert-string-value>&#xBF;AB</assert-string-value>
      </any-of>
    </result>
  </test-case>

  <test-case name="bin-decode-string-056" covers-40="PR2222">
    <description>Test for the decode-string function.</description>
    <created by="Christian Gruen" on="2025-10-28"/>
    <test>bin:decode-string(xs:hexBinary('40EFBBBF4142'), "iso-8859-1", 4)</test>
    <result>
      <any-of>
        <error code="Q{http://expath.org/ns/binary}unknown-encoding"/>
        <assert-string-value>AB</assert-string-value>
      </any-of>
    </result>
  </test-case>

  <test-case name="bin-decode-string-057" covers-40="PR2222">
    <description>Test for the decode-string function.</description>
    <created by="Christian Gruen" on="2025-10-28"/>
    <test>bin:decode-string(xs:hexBinary('40EFBBBF4142'), "iso-8859-1", 5)</test>
    <result>
      <any-of>
        <error code="Q{http://expath.org/ns/binary}unknown-encoding"/>
        <assert-string-value>B</assert-string-value>
      </any-of>
    </result>
  </test-case>

  <test-case name="bin-decode-string-058" covers-40="PR2222">
    <description>Test for the decode-string function.</description>
    <created by="Christian Gruen" on="2025-10-28"/>
    <test>bin:decode-string(xs:hexBinary('40EFBBBF4142'), "iso-8859-1", 6)</test>
    <result>
      <any-of>
        <error code="Q{http://expath.org/ns/binary}unknown-encoding"/>
        <assert-string-value/>
      </any-of>
    </result>
  </test-case>
</test-set>
