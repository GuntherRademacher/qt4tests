<test-set xmlns="http://www.w3.org/2010/09/qt-fots-catalog" name="fn-all-different" covers-40="PR156">
  <description>Tests for the fn:all-different function (previously named "unique")</description>
  <link type="spec" document="http://www.w3.org/TR/xpath-functions-30/" idref="func-all-different"/>
  <dependency type="spec" value="XP40+ XQ40+"/>
  
  <test-case name="all-different-001">
    <description>Empty sequence</description>
    <created by="Christian Gruen" on="2022-08-09"/>
    <test><![CDATA[fn:all-different(())]]></test>
    <result>
      <assert-true/>
    </result>
  </test-case>
  
  <test-case name="all-different-002">
    <description>Single integer</description>
    <created by="Christian Gruen" on="2022-08-09"/>
    <test><![CDATA[fn:all-different(1)]]></test>
    <result>
      <assert-true/>
    </result>
  </test-case>
  
  <test-case name="all-different-003">
    <description>Single string</description>
    <created by="Christian Gruen" on="2022-08-09"/>
    <test><![CDATA[fn:all-different("x")]]></test>
    <result>
      <assert-true/>
    </result>
  </test-case>
  
  <test-case name="all-different-004">
    <description>Integers</description>
    <created by="Christian Gruen" on="2022-08-09"/>
    <test><![CDATA[fn:all-different((1, 1))]]></test>
    <result>
      <assert-false/>
    </result>
  </test-case>
  
  <test-case name="all-different-005">
    <description>Identical integers</description>
    <created by="Christian Gruen" on="2022-08-09"/>
    <test><![CDATA[fn:all-different((1 to 1000) ! 1)]]></test>
    <result>
      <assert-false/>
    </result>
  </test-case>
  
  <test-case name="all-different-006">
    <description>Identical strings</description>
    <created by="Christian Gruen" on="2022-08-09"/>
    <test><![CDATA[fn:all-different((1 to 1000) ! 'x')]]></test>
    <result>
      <assert-false/>
    </result>
  </test-case>
  
  <test-case name="all-different-007">
    <description>Integer range</description>
    <created by="Christian Gruen" on="2022-08-09"/>
    <test><![CDATA[fn:all-different((1 to 2))]]></test>
    <result>
      <assert-true/>
    </result>
  </test-case>
  
  <test-case name="all-different-008">
    <description>Integers</description>
    <created by="Christian Gruen" on="2022-08-09"/>
    <test><![CDATA[fn:all-different((1, 2, 3))]]></test>
    <result>
      <assert-true/>
    </result>
  </test-case>
  
  <test-case name="all-different-009">
    <description>Strings</description>
    <created by="Christian Gruen" on="2022-08-09"/>
    <test><![CDATA[fn:all-different((1, 2, 3) ! string())]]></test>
    <result>
      <assert-true/>
    </result>
  </test-case>
  
  <test-case name="all-different-010">
    <description>Items of different type</description>
    <created by="Christian Gruen" on="2022-08-09"/>
    <test><![CDATA[fn:all-different((1, '1'))]]></test>
    <result>
      <assert-true/>
    </result>
  </test-case>
  
  <test-case name="all-different-011">
    <description>Numbers of different type</description>
    <created by="Christian Gruen" on="2022-08-09"/>
    <test><![CDATA[fn:all-different((1, 1.0, 1e0))]]></test>
    <result>
      <assert-false/>
    </result>
  </test-case>
  
  <test-case name="all-different-012">
    <description>Element with filter expression</description>
    <created by="Christian Gruen" on="2022-08-09"/>
    <dependency type="spec" value="XQ40+"/>
    <test><![CDATA[fn:all-different(<a/>[. = ''])]]></test>
    <result>
      <assert-true/>
    </result>
  </test-case>
  
  <test-case name="all-different-013">
    <description>Elements with filter expression</description>
    <created by="Christian Gruen" on="2022-08-09"/>
    <dependency type="spec" value="XQ40+"/>
    <test><![CDATA[fn:all-different((<a/>, <b/>)[. = ''])]]></test>
    <result>
      <assert-false/>
    </result>
  </test-case>
  
  <test-case name="all-different-014">
    <description>Element with filter expression</description>
    <created by="Christian Gruen" on="2022-08-09"/>
    <dependency type="spec" value="XQ40+"/>
    <test><![CDATA[fn:all-different(<a/>[. != ''])]]></test>
    <result>
      <assert-true/>
    </result>
  </test-case>
  
  <test-case name="all-different-015">
    <description>Elements with filter expression</description>
    <created by="Christian Gruen" on="2022-08-09"/>
    <dependency type="spec" value="XQ40+"/>
    <test><![CDATA[fn:all-different((<a/>, <b/>)[. != ''])]]></test>
    <result>
      <assert-true/>
    </result>
  </test-case>
  
  <test-case name="all-different-016">
    <description>Empty array</description>
    <created by="Christian Gruen" on="2022-08-09"/>
    <test><![CDATA[fn:all-different([])]]></test>
    <result>
      <assert-true/>
    </result>
  </test-case>
  
  <test-case name="all-different-017">
    <description>Array with single member</description>
    <created by="Christian Gruen" on="2022-08-09"/>
    <test><![CDATA[fn:all-different([ 1 ])]]></test>
    <result>
      <assert-true/>
    </result>
  </test-case>
  
  <test-case name="all-different-018">
    <description>Array with uniform members</description>
    <created by="Christian Gruen" on="2022-08-09"/>
    <test><![CDATA[fn:all-different([ 1, 1 ])]]></test>
    <result>
      <assert-false/>
    </result>
  </test-case>
  
  <test-case name="all-different-019">
    <description>Array with distinct members</description>
    <created by="Christian Gruen" on="2022-08-09"/>
    <test><![CDATA[fn:all-different([ 1, 2 ])]]></test>
    <result>
      <assert-true/>
    </result>
  </test-case>
  
  <test-case name="all-different-020">
    <description>Dynamic range expression</description>
    <created by="Christian Gruen" on="2022-08-09"/>
    <dependency type="spec" value="XQ40+"/>
    <test><![CDATA[fn:all-different((1 to <_>1</_>/text()))]]></test>
    <result>
      <assert-true/>
    </result>
  </test-case>
  
  <test-case name="all-different-021">
    <description>Dynamic range expression</description>
    <created by="Christian Gruen" on="2022-08-09"/>
    <dependency type="spec" value="XQ40+"/>
    <test><![CDATA[fn:all-different((1 to <_>2</_>/text()))]]></test>
    <result>
      <assert-true/>
    </result>
  </test-case>
  
  <test-case name="all-different-022">
    <description>Replicated filter expression</description>
    <created by="Christian Gruen" on="2022-08-09"/>
    <test><![CDATA[fn:all-different(replicate((1 to 100)[. < 1], 100))]]></test>
    <result>
      <assert-true/>
    </result>
  </test-case>
  
  <test-case name="all-different-023">
    <description>Replicated filter expression</description>
    <created by="Christian Gruen" on="2022-08-09"/>
    <test><![CDATA[fn:all-different(replicate((1 to 100)[. < 2], 100))]]></test>
    <result>
      <assert-false/>
    </result>
  </test-case>
  
  <test-case name="all-different-024">
    <description>Replicated filter expression</description>
    <created by="Christian Gruen" on="2022-08-09"/>
    <test><![CDATA[fn:all-different(replicate((1 to 100)[. < 3], 100))]]></test>
    <result>
      <assert-false/>
    </result>
  </test-case>
  
  <test-case name="all-different-025">
    <description>Reversed strings</description>
    <created by="Christian Gruen" on="2022-08-09"/>
    <test><![CDATA[fn:all-different(reverse((1 to 10) ! string()))]]></test>
    <result>
      <assert-true/>
    </result>
  </test-case>
  
  <test-case name="all-different-026">
    <description>Sorted strings</description>
    <created by="Christian Gruen" on="2022-08-09"/>
    <test><![CDATA[fn:all-different(sort((1 to 10) ! string()))]]></test>
    <result>
      <assert-true/>
    </result>
  </test-case>
  
  <test-case name="all-different-027">
    <description>Strings and collation</description>
    <created by="Christian Gruen" on="2022-08-09"/>
    <test><![CDATA[fn:all-different(('A', 'a'), "http://www.w3.org/2005/xpath-functions/collation/html-ascii-case-insensitive")]]></test>
    <result>
      <assert-false/>
    </result>
  </test-case>
  
  <test-case name="all-different-028">
    <description>Strings and collation</description>
    <created by="Christian Gruen" on="2022-08-09"/>
    <test><![CDATA[fn:all-different(('A', 'b'), "http://www.w3.org/2005/xpath-functions/collation/html-ascii-case-insensitive")]]></test>
    <result>
      <assert-true/>
    </result>
  </test-case>
  
  <test-case name="all-different-029">
    <description>Collation set to ()</description>
    <created by="Michael Kay" on="2023-07-04"/>
    <test><![CDATA[fn:all-different(('A', 'B'), ())]]></test>
    <result>
      <assert-true/>
    </result>
  </test-case>
  
  <test-case name="all-different-030">
    <description>Collation set to ()</description>
    <created by="Michael Kay" on="2023-07-04"/>
    <test><![CDATA[fn:all-different(('A', 'B'), collation:=())]]></test>
    <result>
      <assert-true/>
    </result>
  </test-case>
  
  <test-case name="all-different-031">
    <description>Collation set to ()</description>
    <created by="Michael Kay" on="2023-07-04"/>
    <test><![CDATA[fn:all-different(('A', 'B'), collation:="xyz"[current-date() lt xs:date('1999-01-01')])]]></test>
    <result>
      <assert-true/>
    </result>
  </test-case>
  
  <test-case name="all-different-032">
    <description>Mix of floats and doubles</description>
    <created by="Michael Kay" on="2023-12-03"/>
    <test><![CDATA[fn:all-different((xs:float('1.2'), xs:double('1.2')))]]></test>
    <result>
      <assert-true/>
    </result>
  </test-case>
  
  <test-case name="all-different-033">
    <description>Mix of decimals and doubles</description>
    <created by="Michael Kay" on="2023-12-03"/>
    <test><![CDATA[fn:all-different((xs:decimal('1.2'), xs:double('1.2')))]]></test>
    <result>
      <assert-true/>
    </result>
  </test-case>
  
  <test-case name="all-different-034">
    <description>Mix of decimals and doubles all integral</description>
    <created by="Michael Kay" on="2023-12-03"/>
    <test><![CDATA[fn:all-different((xs:decimal('1'), xs:double('1')))]]></test>
    <result>
      <assert-false/>
    </result>
  </test-case>
  
  <test-case name="all-different-035">
    <description>Negative zero</description>
    <created by="Michael Kay" on="2025-10-01"/>
    <test><![CDATA[fn:all-different((0.0e0, -0.0e0))]]></test>
    <result>
      <assert-false/>
    </result>
  </test-case>
  
</test-set>