<?xml version="1.0" encoding="UTF-8"?>
<test-set xmlns="http://www.w3.org/2010/09/qt-fots-catalog" name="fn-parse-html" covers="PR772">
   <description>
      Tests the parse-html function.
   </description>
   <dependency type="spec" value="XP40+ XQ40+"/>
   
   <!-- placeholder tests for now -->
   <test-case name="fn-parse-html-001">
      <description>Empty string object</description>
      <created by="Michael Kay, Saxonica" on="2025-09-09"/>
      <test>parse-html("")</test>
      <result>
         <assert>/Q{http://www.w3.org/1999/xhtml}html</assert>
      </result>
   </test-case>
   
   <test-case name="fn-parse-html-002">
      <description>Empty base64Binary object</description>
      <created by="Michael Kay, Saxonica" on="2025-09-09"/>
      <test>parse-html(xs:base64Binary(""))</test>
      <result>
         <assert>/Q{http://www.w3.org/1999/xhtml}html</assert>
      </result>
   </test-case>
   
   <test-case name="fn-parse-html-003">
      <description>Empty hexBinary object</description>
      <created by="Michael Kay, Saxonica" on="2025-09-09"/>
      <test>parse-html(xs:hexBinary(""))</test>
      <result>
         <assert>/Q{http://www.w3.org/1999/xhtml}html</assert>
      </result>
   </test-case>
   
   <test-case name="fn-parse-html-004">
      <description>Empty sequence</description>
      <created by="Michael Kay, Saxonica" on="2025-09-24"/>
      <test>parse-html(())</test>
      <result>
         <assert-empty/>
      </result>
   </test-case>
   
   <test-case name="fn-parse-html-005">
      <description>Empty string content with encoding option</description>
      <created by="Michael Kay, Saxonica" on="2025-09-24"/>
      <test><![CDATA[parse-html("", {"encoding": "UTF-8"})]]></test>
      <result>
         <assert>/Q{http://www.w3.org/1999/xhtml}html</assert>
      </result>
   </test-case>
   
   <test-case name="fn-parse-html-006">
      <description>Empty binary content with encoding option</description>
      <created by="Michael Kay, Saxonica" on="2025-09-24"/>
      <test><![CDATA[parse-html(xs:hexBinary(""), {"encoding": "UTF-8"})]]></test>
      <result>
         <assert>/Q{http://www.w3.org/1999/xhtml}html</assert>
      </result>
   </test-case>
   
   <test-case name="fn-parse-html-007">
      <description>Empty binary content with encoding option</description>
      <created by="Michael Kay, Saxonica" on="2025-09-24"/>
      <test><![CDATA[parse-html(xs:base64Binary(""), {"encoding": "UTF-8"})]]></test>
      <result>
         <assert>/Q{http://www.w3.org/1999/xhtml}html</assert>
      </result>
   </test-case>
   
   <test-case name="fn-parse-html-008">
      <description>Empty string content with fail-on-error option</description>
      <created by="Michael Kay, Saxonica" on="2025-09-24"/>
      <test><![CDATA[parse-html("", {"fail-on-error": true()})]]></test>
      <result>
         <assert>/Q{http://www.w3.org/1999/xhtml}html</assert>
      </result>
   </test-case>
   
   <test-case name="fn-parse-html-009">
      <description>Empty binary content with fail-on-error option</description>
      <created by="Michael Kay, Saxonica" on="2025-09-24"/>
      <test><![CDATA[parse-html(xs:hexBinary(""), {"fail-on-error": false()})]]></test>
      <result>
         <assert>/Q{http://www.w3.org/1999/xhtml}html</assert>
      </result>
   </test-case>
   
   <test-case name="fn-parse-html-010">
      <description>Empty binary content with fail-on-error option</description>
      <created by="Michael Kay, Saxonica" on="2025-09-24"/>
      <test><![CDATA[parse-html(xs:base64Binary(""), {"fail-on-error": true()})]]></test>
      <result>
         <assert>/Q{http://www.w3.org/1999/xhtml}html</assert>
      </result>
   </test-case>
   
   <test-case name="fn-parse-html-011" covers-40="PR2211">
      <description>Empty string content with include-template-content option (dropped by PR2211)</description>
      <created by="Michael Kay, Saxonica" on="2025-09-24"/>
      <test><![CDATA[parse-html("", {"include-template-content": true()})]]></test>
      <result>
         <error code="XPTY0004"/>
      </result>
   </test-case>
   
   <test-case name="fn-parse-html-012">
      <description>Unknown option</description>
      <created by="Michael Kay, Saxonica" on="2025-09-24"/>
      <test><![CDATA[parse-html("", {"exclude-template-content": true()})]]></test>
      <result>
         <error code="XPTY0004"/>
      </result>
   </test-case>
   
   <test-case name="fn-parse-html-013">
      <description>Invalid option</description>
      <created by="Michael Kay, Saxonica" on="2025-09-24"/>
      <test><![CDATA[parse-html("", {"encoding": true()})]]></test>
      <result>
         <error code="XPTY0004"/>
      </result>
   </test-case>
   
   <test-case name="fn-parse-html-014">
      <description>Non-trivial well-formed string document</description>
      <created by="Michael Kay, Saxonica" on="2025-09-24"/>
      <test><![CDATA[parse-html("<html><body><p>Hello web!</p></body></html>")]]></test>
      <result>
         <all-of xmlns:h="http://www.w3.org/1999/xhtml">
            <assert>/h:html</assert>
            <assert>/h:html/h:head</assert>
            <assert>/h:html/h:body</assert>
            <assert>/h:html/h:body/h:p[. = 'Hello web!']</assert>
         </all-of>
      </result>
   </test-case>
   
   
   <test-case name="fn-parse-html-015" covers-40="PR2211">
      <description>HTML template element, example from living HTML spec section ยง4.12.3</description>
      <created by="Michael Kay, Saxonica" on="2025-09-24"/>  
      <test><![CDATA[parse-html(`
 
         <!doctype html>
         <html lang="en">
          <head>
           <title>Homework</title>
          <body>
           <template id="template"><p>Smile!</p></template>
           <script>
            let num = 3;
            const fragment = document.getElementById('template').content.cloneNode(true);
            while (num-- > 1) {{
              fragment.firstChild.before(fragment.firstChild.cloneNode(true));
              fragment.firstChild.textContent += fragment.lastChild.textContent;
            }}
            document.body.appendChild(fragment);
           </script>
         </html>
      
      `)]]></test>
      <result>
         <all-of xmlns:h="http://www.w3.org/1999/xhtml">
            <assert>/h:html</assert>
            <assert>/h:html/h:head</assert>
            <assert>/h:html/h:body/h:template</assert>
            <assert>/h:html/h:body/h:template/h:p = "Smile!"</assert>
         </all-of>
      </result>
   </test-case>

</test-set>
